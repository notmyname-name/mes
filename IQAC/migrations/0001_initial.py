# Generated by Django 3.1.1 on 2021-10-14 07:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actioniqac_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('plan', models.CharField(max_length=250, verbose_name='Plan of Action')),
            ],
        ),
        migrations.CreateModel(
            name='addoncourse_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('Type', models.CharField(choices=[('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('others', 'others')], max_length=100, verbose_name='Type of Course')),
                ('Dept', models.CharField(max_length=30, verbose_name='Involved Department/ Cell/ Club')),
                ('rptcpy', models.FileField(upload_to='files', verbose_name='Copy of the Report from the Department')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
                ('img', models.ImageField(upload_to='images', verbose_name=' Supporting Photos')),
            ],
        ),
        migrations.CreateModel(
            name='Aqar_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.CharField(max_length=15, verbose_name='Year of AQAR')),
                ('Aqarupload', models.FileField(upload_to='files', verbose_name='Upload Your AQAR')),
                ('NAACACK', models.FileField(upload_to='files', verbose_name='Upload your NAAC Acknowledgement')),
            ],
        ),
        migrations.CreateModel(
            name='auditRpt_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('rptcpy', models.FileField(upload_to='files', verbose_name='Copy of the Report from the Management')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
            ],
        ),
        migrations.CreateModel(
            name='codeconduct_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('codefor', models.CharField(choices=[('Teacher', 'Teacher'), ('Student', 'Student'), ('others', 'others')], max_length=30, null=True, verbose_name='Code of Conduct for')),
                ('policydoc', models.FileField(upload_to='files', verbose_name='Policy Document')),
                ('photo', models.ImageField(upload_to='images', verbose_name=' Supporting Photos with Geo-tagg')),
            ],
        ),
        migrations.CreateModel(
            name='CollegeauditRpt_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('frptcpy', models.FileField(upload_to='files', verbose_name='Internal financial Audit Report of the College')),
                ('Grptcpy', models.FileField(upload_to='files', verbose_name='Green Audit Report of the College')),
                ('Erptcpy', models.FileField(upload_to='files', verbose_name='Energy Audit Report of the College')),
                ('Arptcpy', models.FileField(upload_to='files', verbose_name='Academic Audit Report of the College')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
            ],
        ),
        migrations.CreateModel(
            name='Financegrants_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('typ', models.CharField(choices=[('Government', 'Govt'), ('Non-Government', 'Non-Govt'), ('others', 'others')], max_length=30, null=True, verbose_name='Type of the Grant')),
                ('name', models.CharField(max_length=30, verbose_name='Name of the Grant')),
                ('amt', models.CharField(max_length=30, verbose_name='Amount Sanctioned')),
                ('dept', models.CharField(max_length=30, verbose_name='Department Involved')),
                ('Grantdoc', models.FileField(upload_to='files', verbose_name='Document showing the sanction')),
                ('other', models.FileField(upload_to='files', verbose_name='Any other document relevant')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
            ],
        ),
        migrations.CreateModel(
            name='Infraiqac_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('Typeinf', models.CharField(max_length=100, verbose_name='Type of Augmented infrastructure')),
                ('Dept', models.CharField(max_length=30, verbose_name='Involved Department/ Cell/ Club')),
                ('Invoicecpy', models.FileField(upload_to='files', verbose_name='Invoice Copy upload')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
                ('img', models.ImageField(upload_to='images', verbose_name=' Supporting Photos')),
            ],
        ),
        migrations.CreateModel(
            name='IQAC_COE_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.CharField(choices=[('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025')], max_length=15, null=True, verbose_name='Year')),
                ('Date', models.DateField(verbose_name='date of entry')),
                ('Name_ev', models.CharField(max_length=200, null=True, verbose_name='Name of the Event')),
                ('Tent_date', models.CharField(max_length=200, null=True, verbose_name='Tentative date of the Event')),
                ('Remarks', models.CharField(max_length=200, null=True, verbose_name='Remarks')),
                ('COE_univ', models.FileField(upload_to='files', verbose_name='Calender of Events - UNIVERSITY')),
            ],
        ),
        migrations.CreateModel(
            name='iqacEvent_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Conduct_for', models.CharField(choices=[('std', ' Students'), ('staff', ' Staff')], max_length=30, null=True, verbose_name='Event Conducted for')),
                ('scope', models.CharField(choices=[('Int', 'International'), ('Nation', 'National'), ('State', 'State'), ('int_class', 'Inter  Class Event'), ('int_faculty', 'Inter faculty Event'), ('int_college', 'Intercolligiate')], max_length=30, null=True, verbose_name='Type/Scope of the Event')),
                ('category', models.CharField(choices=[('FDP', 'Faculty Development Program'), ('GL', 'Guest Lecture'), ('CONF', 'Conference'), ('WORKSP', 'workshop'), ('SEMINAR', 'seminar'), ('HANDON', 'Hands on'), ('WEBINAR', 'webinar'), ('other', 'oth')], max_length=30, null=True, verbose_name='Event category')),
                ('mode', models.CharField(choices=[('online', 'Online'), ('off', 'Offline')], max_length=30, null=True, verbose_name='Mode of conducting Event')),
                ('year', models.DateField(verbose_name='Date conducted')),
                ('Event_Title', models.CharField(max_length=100, verbose_name='Title of the Event')),
                ('Event_bro', models.FileField(upload_to='files', verbose_name='Brouchure')),
                ('Event_sche', models.FileField(upload_to='files', verbose_name='Event Schedule')),
                ('Event_Rpt', models.FileField(upload_to='files', verbose_name='Event Report')),
                ('Event_photo', models.FileField(upload_to='files', verbose_name='Event Photos')),
                ('Event_cert', models.FileField(upload_to='files', verbose_name='Event Sample Certificate')),
                ('Event_approval', models.FileField(upload_to='files', verbose_name='Event Approval/Statuory letter')),
                ('Event_misc', models.FileField(upload_to='files', verbose_name='Event Miscellaneous')),
            ],
        ),
        migrations.CreateModel(
            name='IQACmandatedoc_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('COE_Univ', models.FileField(upload_to='files', verbose_name='Calender of Events - Univeristy')),
                ('COE_IQAC', models.FileField(upload_to='files', verbose_name='Calender of Events -IQAC')),
                ('Cir_Univ', models.FileField(upload_to='files', verbose_name='Circular - Univeristy')),
                ('Cir_UGC', models.FileField(upload_to='files', verbose_name='Circular-UGC')),
                ('ugc', models.FileField(upload_to='files', verbose_name='UGC 2f/12(B) certificate')),
                ('affiliation', models.FileField(upload_to='files', verbose_name='College Affiliation')),
                ('TT_col_test', models.FileField(upload_to='files', verbose_name='Time Table - Internal College Test')),
                ('TT_College', models.FileField(upload_to='files', verbose_name='Time Table - College')),
                ('Others', models.FileField(upload_to='files', verbose_name='Any other relevant material')),
            ],
        ),
        migrations.CreateModel(
            name='iqacmeeting_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('All staff_meet', 'All Staff Meeting'), ('IQAC member_meet', 'IQAC Members Meeting'), ('Office member_meet', 'Office Staff Meeting'), ('std_meet', 'staff Student Meeting')], max_length=30, null=True, verbose_name='Meeting category')),
                ('year', models.DateField(verbose_name='Date conducted')),
                ('Agenda', models.CharField(max_length=100, verbose_name='Agenda of the Meeting')),
                ('MOM', models.FileField(upload_to='files', verbose_name='Minutes of Meeting')),
                ('ATR', models.FileField(upload_to='files', verbose_name='Action Taken Report')),
            ],
        ),
        migrations.CreateModel(
            name='member_model',
            fields=[
                ('username', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Username')),
                ('password', models.CharField(max_length=50, verbose_name='Password')),
            ],
        ),
        migrations.CreateModel(
            name='MOM_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date conducted')),
                ('mom', models.FileField(upload_to='files', verbose_name='Minutes of meeting')),
                ('ATR', models.FileField(upload_to='files', verbose_name='Action taken Report')),
            ],
        ),
        migrations.CreateModel(
            name='Mouiqac_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('Purp', models.CharField(max_length=100, verbose_name='Purpose of the MOU')),
                ('Dept', models.CharField(max_length=30, verbose_name='Involved Department/ Cell/ Club')),
                ('Moucpy', models.FileField(upload_to='files', verbose_name='MOU Copy ')),
            ],
        ),
        migrations.CreateModel(
            name='notification_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
            ],
        ),
        migrations.CreateModel(
            name='scholarshipdet_model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=30, verbose_name='Year')),
                ('typ', models.CharField(choices=[('Government', 'Govt'), ('Non-Government', 'Non-Govt'), ('others', 'others')], max_length=30, null=True, verbose_name='Type of the Scholarship')),
                ('name', models.CharField(max_length=30, verbose_name='Name of the Scholarship')),
                ('amt', models.CharField(max_length=30, verbose_name='Amount distruted')),
                ('Stdlist', models.FileField(upload_to='files', verbose_name='Names of the Students')),
                ('remark', models.CharField(max_length=250, verbose_name='Remarks')),
            ],
        ),
    ]
